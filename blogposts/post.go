package blogposts

import (
	"bufio"
	"bytes"
	"fmt"
	"io"
	"strings"
)

const (
    titleSeparator = "Title: "
    descriptionSeparator = "Description: "
    tagSeparator = "Tags: "
)
type Post struct {
    Title       string
    Description string
    Tags        []string
    Body        string
}

func newPost(postFile io.Reader) (Post, error) {
    scanner := bufio.NewScanner(postFile)
    
    readLine := func(tagName string) string {
       scanner.Scan()                                       // Scan advances the Scanner to the next token.
       return strings.TrimPrefix(scanner.Text(), tagName)   // Returns the most recent token generated by a call to Scanner.Scan.
    }

    title := readLine(titleSeparator)
    description := readLine(descriptionSeparator)
    tags := splitTags(readLine(tagSeparator))
    body := readBody(scanner)

    return Post{
        Title:          title,
        Description:    description,
        Tags:           tags,
        Body:           body,
    }, nil
}

func readBody(scanner *bufio.Scanner) string {
   scanner.Scan() // Scan --- line
   buf := bytes.Buffer{}
   for scanner.Scan(){
        fmt.Fprint(&buf, scanner.Text())
   }
   return strings.TrimSuffix(buf.String(), "\n")
}
func splitTags(str string) []string {
    return strings.Split(str, ", ")
}
